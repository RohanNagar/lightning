package com.sanction.lightning.models.twitter;

import com.fasterxml.jackson.annotation.JsonProperty;

import java.util.Objects;
import java.util.StringJoiner;

public class TwitterOAuthRequest {
  private final String requestToken;
  private final String requestSecret;
  private final String url;

  /**
   * Constructs a new TwitterOAuthRequest from the given parameters.
   *
   * @param requestToken The request token generated by Twitter for this request.
   * @param requestSecret The request token secret generated by Twitter for this request.
   * @param url The URL to direct the user in order to authenticate this request.
   */
  public TwitterOAuthRequest(@JsonProperty("requestToken") String requestToken,
                             @JsonProperty("requestSecret") String requestSecret,
                             @JsonProperty("url") String url) {
    this.requestToken = requestToken;
    this.requestSecret = requestSecret;
    this.url = url;
  }

  public String getRequestToken() {
    return requestToken;
  }

  public String getRequestSecret() {
    return requestSecret;
  }

  public String getUrl() {
    return url;
  }

  @Override
  public boolean equals(Object obj) {
    if (this == obj) {
      return true;
    }

    if (!(obj instanceof TwitterOAuthRequest)) {
      return false;
    }

    TwitterOAuthRequest other = (TwitterOAuthRequest) obj;
    return Objects.equals(this.requestToken, other.requestToken)
        && Objects.equals(this.requestSecret, other.requestSecret);
  }

  @Override
  public int hashCode() {
    return Objects.hash(this.requestToken, this.requestSecret);
  }

  @Override
  public String toString() {
    return new StringJoiner(", ", "TwitterOAuthRequest [", "]")
        .add(String.format("requestToken=%s", requestToken))
        .add(String.format("requestSecret=%s", requestSecret))
        .add(String.format("url=%s", url))
        .toString();
  }
}
